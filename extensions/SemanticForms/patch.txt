Index: extensions/SemanticForms/includes/SF_FormEditTab.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormEditTab.php	(revision 10879)
+++ extensions/SemanticForms/includes/SF_FormEditTab.php	(working copy)
@@ -137,9 +137,20 @@
 		}
 		if ( count( $form_names ) > 1 ) {
 			SFUtils::loadMessages();
-			$warning_text = '    <div class="warningMessage">' . wfMsg( 'sf_formedit_morethanoneform' ) . "</div>\n";
+			/*op-patch|SR|2010-01-15|selection when several default forms exist|start*/
+			/*op-patch|SR|2010-01-15|selection when several default forms exist|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Choose_form_for_several_default_forms*/
+			global $wgContLang;
+			$jsCode = "javascript:top.location.href=wgScript+'/"
+				.$wgContLang->getNsText(NS_SPECIAL)
+				.":FormEdit/'+this[selectedIndex].text+'/'+wgPageName; return false";
+			$selection = '<b>'.wfMsg('sf_several_forms_notice').'</b><br/>'
+				.wfMsg('sf_several_forms_label').'<select onchange="'.$jsCode.'">'."\n";
+			for ($i =0, $is=count($form_names); $i < $is; $i++)
+				$selection .= "<option>".$form_names[$i]."</option>\n";
+			$selection.="</select>\n";
 			global $wgOut;
-			$wgOut->addHTML( $warning_text );
+			$wgOut->addHTML( $selection );
+			/*op-patch|SR|2010-01-15|selection when several default forms exist|end*/
 		}
 		$form_name = $form_names[0];
 
Index: extensions/SemanticForms/includes/SF_FormInputs.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormInputs.php	(revision 10879)
+++ extensions/SemanticForms/includes/SF_FormInputs.php	(working copy)
@@ -235,6 +235,16 @@
 		if ( array_key_exists( 'maxlength', $other_args ) ) {
 			$inputAttrs['maxlength'] = $other_args['maxlength'];
 		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|start*/
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Fix_other_args_bug*/
+		// fix bug http://smwforum.ontoprise.com/smwbugs/show_bug.cgi?id=13984
+		$known_other_args = array('class', 'field_type', 'size', 'maxlength', 'is_uploadable', 'possible_values',
+		'is_list', 'delimiter', 'autocomplete field type', 'value_labels', 'semantic_property' );
+		foreach (array_keys($other_args) as $key ) {
+			if ($key && !in_array($key, $known_other_args))
+			$inputAttrs[$key] = $other_args[$key];
+		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|end*/
 		$text = Xml::element( 'input', $inputAttrs );
 
 		if ( array_key_exists( 'is_uploadable', $other_args ) && $other_args['is_uploadable'] == true ) {
@@ -339,6 +349,16 @@
 			$textarea_attrs['onKeyDown'] = $maxLengthJSCheck;
 			$textarea_attrs['onKeyUp'] = $maxLengthJSCheck;
 		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|start*/
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Fix_other_args_bug*/
+		// fix bug http://smwforum.ontoprise.com/smwbugs/show_bug.cgi?id=13984
+		$known_other_args = array('class', 'field_type', 'size', 'maxlength', 'is_uploadable', 'possible_values',
+        'is_list', 'delimiter', 'autocomplete field type', 'value_labels', 'semantic_property', 'rows', 'cols', 'autogrow' );
+		foreach (array_keys($other_args) as $key ) {
+			if ( $key && ! in_array($key, $known_other_args))
+			$textarea_attrs[$key] = $other_args[$key];
+		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|end*/
 		$text = Xml::element( 'textarea', $textarea_attrs, $cur_value, false );
 		$spanClass = "inputSpan";
 		if ( $is_mandatory ) { $spanClass .= " mandatoryFieldSpan"; }
Index: extensions/SemanticForms/includes/SF_FormLinker.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormLinker.php	(revision 10879)
+++ extensions/SemanticForms/includes/SF_FormLinker.php	(working copy)
@@ -8,6 +8,11 @@
  * @author Yaron Koren
  */
 
+// patches included:
+// 1. "edit with form"-tab for Categories. DH Apr 22 09
+//    tag of patch: op-patch|DH|2009-04-22|"edit with form"-tab for Categories
+//    doc: op-patch|DH|2009-04-22|"edit with form"-tab for Categories|doc|
+
 if ( !defined( 'MEDIAWIKI' ) ) die();
 
 class SFFormLinker {
@@ -288,7 +293,10 @@
 		// If this is not a category page, look for a default form
 		// for its parent category or categories.
 		$namespace = $title->getNamespace();
-		if ( NS_CATEGORY !== $namespace ) {
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|start*/
+		//if (NS_CATEGORY !== $namespace) {
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|end*/
+		
 			$default_forms = array();
 			$categories = SFUtils::getCategoriesForPage( $title );
 			foreach ( $categories as $category ) {
@@ -297,7 +305,10 @@
 			if ( count( $default_forms ) > 0 ) {
 				return $default_forms;
 			}
-		}
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|start*/
+		//}
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|end*/
+			
 		// If we're still here, just return the default form for the
 		// namespace, which may well be null.
 		if ( NS_MAIN === $namespace ) {
Index: extensions/SemanticForms/includes/SF_FormPrinter.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormPrinter.php	(revision 10879)
+++ extensions/SemanticForms/includes/SF_FormPrinter.php	(working copy)
@@ -273,6 +273,16 @@
 		// flag for placing "<onlyinclude>" tags in form output
 		$onlyinclude_free_text = false;

+		/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|start*/
+		/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Patch_free_text_in_includeonly_tags*/
+		$includeonly_free_text = false;
+		/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|end*/
+
+		/*op-patch|DH|2009-09-18|SF|include namespace for current user|start*/
+		global $wgContLang;
+		$namespace_labels = $wgContLang->getNamespaces();
+		$user_namespace = $namespace_labels[NS_USER];
+		/*op-patch|DH|2009-09-18|SF|include namespace for current user|end*/
 		// If we have existing content and we're not in an active replacement
 		// situation, preserve the original content. We do this because we want
 		// to pass the original content on IF this is a partial form.
@@ -420,6 +430,10 @@
 			$tif = new SFTemplateInForm();
 			$start_position = 0;
 			$template_text = "";
+			/*op-patch|BL|2009-10-09|CollapsingForms|AddCollapsibleTag|start*/
+			/*op-patch|BL|2009-10-09|CollapsingForms|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/CollapsingForms*/
+			$collapsible = false;
+			/*op-patch|BL|2009-10-09|CollapsingForms|AddCollapsibleTag|end*/
 			// the append is there to ensure that the original array doesn't get
 			// modified; is it necessary?
 			$section = " " . $form_def_sections[$section_num];
@@ -441,11 +455,17 @@
 					// Also replace periods with underlines, since that's what
 					// POST does to strings anyway.
 					$query_template_name = str_replace( '.', '_', $query_template_name );
+					/*op-patch|BL|2009-08-28|CollapsingForms|AddForceOpen|start*/
+					$force_open = false;
+					/*op-patch|BL|2009-10-09|CollapsingForms|AddForceOpen|end*/
 					// Cycle through the other components.
 					for ( $i = 2; $i < count( $tag_components ); $i++ ) {
 						$component = $tag_components[$i];
 						if ( $component == 'multiple' ) $allow_multiple = true;
 						if ( $component == 'strict' ) $strict_parsing = true;
+						/*op-patch|BL|2009-08-28|CollapsingForms|AddCollapsibleTag|start*/
+						if ( $component == 'collapsible' ) $collapsible = true;
+						/*op-patch|BL|2009-08-28|CollapsingForms|AddCollapsibleTag|end*/
 						$sub_components = explode( '=', $component, 2 );
 						if ( count( $sub_components ) == 2 ) {
 							if ( $sub_components[0] == 'label' ) {
@@ -453,15 +473,59 @@
 							} elseif ( $sub_components[0] == 'add button text' ) {
 								$add_button_text = $sub_components[1];
 							}
+							/*op-patch|BL|2009-09-16|CollapsingForms|AddForceopenTag|start*/
+							elseif ( $sub_components[0] == 'forceopen' ) {
+								if ($sub_components[1] && strtolower($sub_components[1] == 'true'))
+								$force_open = true;
 						}
+							/*op-patch|BL|2009-09-16|CollapsingForms|AddForceopenTag|end*/
 					}
+					}
 					// If this is the first instance, add the label into the form, if
 					// there is one, and add the appropriate wrapper div, if this is
 					// a multiple-instance template.
 					if ( $old_template_name != $template_name ) {
 						if ( isset( $template_label ) ) {
 							$form_text .= "<fieldset>\n";
+							/*op-patch|BL|2009-08-28|CollapsingForms|AddCollapseFunctionality|start*/
+							// Add Javascript, curser style and sfgTabIndex for each legend
+							// content was:
+							// $form_text .= "<legend>$template_label</legend>\n";
+							// }
+							global $smwgRMActFormName, $sfgScriptPath;
+							//only if collapsible
+							if ($collapsible ) {
+								#cookie processing
+								$cookie_json = in_array('CollapsingForm', array_keys($_COOKIE)) ? $_COOKIE['CollapsingForm'] : null;
+								if ($cookie_json)
+								$cookie_obj = json_decode($cookie_json,true);
+								if (isset($cookie_obj) && array_key_exists($smwgRMActFormName.'_sec_'.$section_num, $cookie_obj)) {
+									$cookie_open = $cookie_obj[$smwgRMActFormName.'_sec_'.$section_num];
+								}
+								else {
+									$cookie_open = false;
+								}
+								if ($force_open || $cookie_open) {
+									$section_visibility ='';
+									$img = 'minus';
+								}
+								else {
+									$section_visibility = 'none';
+									$img = 'plus';
+								}
+								$form_text .= "<legend tabindex=\"$sfgTabIndex\" style=\"cursor: pointer;font-weight:bold;\"
+					                onKeyDown=\"javascript:if (event.keyCode == 32){ smwCollapsingForm.switchVisibilityWithImg('{$smwgRMActFormName}_sec_{$section_num}');}\"
+					                onClick=\"smwCollapsingForm.switchVisibilityWithImg('{$smwgRMActFormName}_sec_{$section_num}');\">
+					                <img id=\"{$smwgRMActFormName}_sec_{$section_num}_img\" onmouseout=\"(src='$sfgScriptPath/skins/$img.gif')\"
+					                onmouseover=\"(src='$sfgScriptPath/skins/$img-act.gif')\" src=\"$sfgScriptPath/skins/$img.gif\"/>&nbsp;$template_label</legend>\n";
+								$sfgTabIndex++;
+								#This DIV provides the functionality for collapsing forms
+								$form_text .= "<div id=\"{$smwgRMActFormName}_sec_".$section_num."\" style=\"display:".$section_visibility."\">";
+							}
+							else {
 							$form_text .= "<legend>$template_label</legend>\n";
+							} // end collabsible
+							/*op-patch|BL|2009-08-28|CollapsingForms|AddCollapseFunctionality|end*/
 						}
 						if ($allow_multiple) {
 							$form_text .= "\t" . '<div class="multipleTemplateWrapper">' . "\n";
@@ -1090,10 +1154,13 @@
 								// if the date is hidden, cur_value will already be set
 								// to the default value
 								( $cur_value == '' || $cur_value == 'current user' ) ) {
-							if ( $input_type == 'text' || $input_type == '' ) {
-								$cur_value_in_template = $wgUser->getName();
+							/*op-patch|DH|2009-09-18|SF|include namespace for current user|start*/
+							if ($input_type == 'text' || $input_type == '' ||
+							$input_type == 'haloACtext' || $input_type == 'haloACtextarea') {
+								$cur_value_in_template = $user_namespace.":".$wgUser->getName();
 								$cur_value = $cur_value_in_template;
 							}
+							/*op-patch|DH|2009-09-18|SF|include namespace for current user|end*/
 						}
 						$new_text = $this->formFieldHTML( $form_field, $cur_value );

@@ -1213,9 +1280,16 @@
 							$form_is_partial = true;
 							// replacement pages may have minimal matches...
 							$source_page_matches_this_form = true;
-						} elseif ( $tag == 'includeonly free text' || $tag == 'onlyinclude free text' ) {
+						}
+						/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|start*/
+						/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Patch_free_text_in_includeonly_tags*/
+						elseif($tag == 'includeonly free text') {
+							$includeonly_free_text = true;
+						}
+						elseif($tag == 'onlyinclude free text') {
 							$onlyinclude_free_text = true;
 						}
+						/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|end*/
 					}
 					$section = substr_replace( $section, '', $brackets_loc, $brackets_end_loc + 3 - $brackets_loc );
 				// =====================================================
@@ -1299,7 +1373,10 @@
 			} else {
 				$form_text .= $section;
 			}
-
+			/*op-patch|BL|2009-08-14|CollapsingForms|AddDivForCollapsingForms|start*/
+			if($collapsible)
+			$form_text .= "</div>"; //closing div for collapsing
+			/*op-patch|BL|2009-08-14|end*/
 		} // end for

 		// if it wasn't included in the form definition, add the
@@ -1340,6 +1417,17 @@
 		} else {
 			$free_text = null;
 		}
+		/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|start*/
+		if ( $includeonly_free_text ) {
+			$free_text = str_replace("<noinclude>",'', $free_text);
+			$free_text = str_replace("</noinclude>",'', $free_text);
+			$free_text = str_replace("<includeonly>",'', $free_text);
+			$free_text = str_replace("</includeonly>",'', $free_text);
+			$free_text = trim ($free_text);
+			$data_text = str_replace('!free_text!','</noinclude><includeonly>!free_text!</includeonly><noinclude>', $data_text);
+			$data_text = "<noinclude>".$data_text."</noinclude>";
+		}
+		/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|end*/
 		if ( $onlyinclude_free_text ) {
 			// modify free text and data text to insert <onlyinclude> tags
 			$free_text = str_replace( "<onlyinclude>", '', $free_text );
Index: extensions/SemanticForms/includes/SF_FormUtils.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormUtils.php	(revision 10879)
+++ extensions/SemanticForms/includes/SF_FormUtils.php	(working copy)
@@ -333,15 +333,21 @@
 		global $wgUser, $wgDefaultUserOptions;
 
 		$showFCKEditor = 0;
-		if ( !$wgUser->getOption( 'riched_start_disabled', $wgDefaultUserOptions['riched_start_disabled'] ) ) {
+		/*op-patch|SR|2009-10-19|FCKeditor|eliminate some warnings|start*/
+		/*op-patch|SR|2009-10-19|FCKeditor|eliminate some warnings|doc http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Eliminate_warnings_of_empty_settings_variables */
+		$defaultOption = in_array('riched_start_disabled', array_keys($wgDefaultUserOptions)) ? $wgDefaultUserOptions['riched_start_disabled'] : null;
+		if ( !$wgUser->getOption( 'riched_start_disabled', $defaultOption ) ) {
 			$showFCKEditor += RTE_VISIBLE;
 		}
-		if ( $wgUser->getOption( 'riched_use_popup', $wgDefaultUserOptions['riched_use_popup'] ) ) {
+		$defaultOption = in_array('riched_use_popup', array_keys($wgDefaultUserOptions)) ? $wgDefaultUserOptions['riched_use_popup'] : null;
+		if ( $wgUser->getOption( 'riched_use_popup', $defaultOption ) ) {
 			$showFCKEditor += RTE_POPUP;
 		}
-		if ( $wgUser->getOption( 'riched_use_toggle', $wgDefaultUserOptions['riched_use_toggle'] ) ) {
+		$defaultOption = in_array('riched_use_toggle', array_keys($wgDefaultUserOptions)) ? $wgDefaultUserOptions['riched_use_toggle'] : null;
+		if ( $wgUser->getOption( 'riched_use_toggle', $defaultOption ) ) {
 			$showFCKEditor += RTE_TOGGLE_LINK;
 		}
+		/*op-patch|SR|2009-10-19|FCKeditor|eliminate some warnings|end*/
 
 		if ( ( !empty( $_SESSION['showMyFCKeditor'] ) ) && ( $wgUser->getOption( 'riched_toggle_remember_state' ) ) )
 		{
Index: extensions/SemanticForms/languages/SF_Messages.php
===================================================================
--- extensions/SemanticForms/languages/SF_Messages.php	(revision 10879)
+++ extensions/SemanticForms/languages/SF_Messages.php	(working copy)
@@ -16,6 +16,10 @@
  */
 $messages['en'] = array(
 	// user messages
+       /*op-patch|SR|2010-01-15|selection when several default forms exist|start*/
+       'sf_several_forms_notice'             => 'There is more than one form defined for this page. You can select another form to edit the page.',
+       'sf_several_forms_label'              => 'Select form: ',
+       /*op-patch|SR|2010-01-15|selection when several default forms exist|end*/
 	'semanticforms-desc'                 => 'Forms for adding and editing semantic data',
 	'specialpages-group-sf_group'        => 'Semantic Forms',
 	'createproperty'                     => 'Create a property',
Index: extensions/SemanticForms/libs/SemanticForms.js
===================================================================
--- extensions/SemanticForms/libs/SemanticForms.js	(revision 10879)
+++ extensions/SemanticForms/libs/SemanticForms.js	(working copy)
@@ -333,9 +333,18 @@
 // Show this div if the current value is any of the relevant options -
 // otherwise, hide it.
 function showDivIfSelected(options, div_id, inputVal, instanceWrapperDiv) {
-	for (var j in options) {
-		// If it's a listbox and the user has selected more than one
-		// value, it'll be an array - handle either case.
+	/* op-patch|BL|2011-05-10|SemanticForms|ForInLoops|start */
+	/*
+	 * op-patch|BL|2011-05-10|SemanticForms|ForInLoops|doc|
+	 * http://dmwiki.ontoprise.com:8888/dmwiki/index.php/For_in_loops_in_SF
+	 */
+	// Reverted "for ... in" back to vanilla loops.
+	// content was:
+	// for (var j in options) {
+	for ( var j = 0; j < options.length; j++ ) {
+	/* op-patch|BL|2011-05-10|end */
+	// If it's a listbox and the user has selected more than one
+	// value, it'll be an array - handle either case.
 		if ((jQuery.isArray(inputVal) && jQuery.inArray(options[j], inputVal) >= 0) ||
 		    (!jQuery.isArray(inputVal) && (inputVal == options[j]))) {
 			showDiv(div_id, instanceWrapperDiv);
@@ -355,7 +364,14 @@
 		var showOnSelectVals = sfgShowOnSelect[this.attr("id")];
 		var instanceWrapperDiv = null;
 	}
-	for (i in showOnSelectVals) {
+	/*op-patch|BL|2011-05-10|SemanticForms|ForInLoops|start*/
+	/*op-patch|BL|2011-05-10|SemanticForms|ForInLoops|doc|
+	 *  http://dmwiki.ontoprise.com:8888/dmwiki/index.php/For_in_loops_in_SF */
+	// Reverted "for ... in" back to vanilla loops.
+	// content was:
+	//	for (i in showOnSelectVals) {
+	for ( var i = 0; i < showOnSelectVals.length; i++ ) {
+	/*op-patch|BL|2011-05-10|end*/
 		var options = showOnSelectVals[i][0];
 		var div_id = showOnSelectVals[i][1];
 		showDivIfSelected(options, div_id, inputVal, instanceWrapperDiv);
@@ -365,7 +381,14 @@
 // Show this div if any of the relevant selections are checked -
 // otherwise, hide it.
 jQuery.fn.showDivIfChecked = function(options, div_id, instanceWrapperDiv) {
-	for (var i in options) {
+	/*op-patch|BL|2011-05-10|SemanticForms|ForInLoops|start*/
+	/*op-patch|BL|2011-05-10|SemanticForms|ForInLoops|doc|
+	 *  http://dmwiki.ontoprise.com:8888/dmwiki/index.php/For_in_loops_in_SF */
+	// Reverted "for ... in" back to vanilla loops.
+	// content was:
+	//	for (var i in options) {
+	for ( var i = 0; i < options.length; i++ ) {
+	/*op-patch|BL|2011-05-10|end*/
 		if (jQuery(this).find('[value="' + options[i] + '"]').is(":checked")) {
 			showDiv(div_id, instanceWrapperDiv);
 			return;
@@ -384,7 +407,16 @@
 		var showOnSelectVals = sfgShowOnSelect[this.attr("id")];
 		var instanceWrapperDiv = null;
 	}
-	for (i in showOnSelectVals) {
+	/* op-patch|BL|2011-05-10|SemanticForms|ForInLoops|start */
+	/*
+	 * op-patch|BL|2011-05-10|SemanticForms|ForInLoops|doc|
+	 * http://dmwiki.ontoprise.com:8888/dmwiki/index.php/For_in_loops_in_SF
+	 */
+	// Reverted "for ... in" back to vanilla loops.
+	// content was:
+	// for (i in showOnSelectVals) {
+	for ( var i = 0; i < showOnSelectVals.length; i++ ) {
+	/* op-patch|BL|2011-05-10|end */
 		var options = showOnSelectVals[i][0];
 		var div_id = showOnSelectVals[i][1];
 		this.showDivIfChecked(options, div_id, instanceWrapperDiv);
@@ -656,8 +688,14 @@
 					// For every initialization method for
 					// input with id old_id, register the
 					// method for the new input.
-					for ( var i in sfdata.initFunctions[old_id] ) {
-
+					/*op-patch|BL|2011-05-10|SemanticForms|ForInLoops|start*/
+					/*op-patch|BL|2011-05-10|SemanticForms|ForInLoops|doc|
+					 *  http://dmwiki.ontoprise.com:8888/dmwiki/index.php/For_in_loops_in_SF */
+					// Reverted "for ... in" back to vanilla loops.
+					// content was:
+					// for ( var i in sfdata.initFunctions[old_id] ) {
+					for ( var i = 0; i < sfdata.initFunctions[old_id].length; i++ ) {
+					/*op-patch|BL|2011-05-10|end*/
 						jQuery(this).SemanticForms_registerInputInit(
 							sfdata.initFunctions[old_id][i].initFunction,
 							sfdata.initFunctions[old_id][i].parameters,
@@ -734,7 +772,14 @@
 				if (sfdata) { // if anything registered at all
 					// Call every initialization method
 					// for this input
-					for ( var i in sfdata.initFunctions[this.id] ) {
+					/*op-patch|BL|2011-05-10|SemanticForms|ForInLoops|start*/
+					/*op-patch|BL|2011-05-10|SemanticForms|ForInLoops|doc|
+					 *  http://dmwiki.ontoprise.com:8888/dmwiki/index.php/For_in_loops_in_SF */
+					// Reverted "for ... in" back to vanilla loops.
+					// content was:
+					// for ( var i in sfdata.initFunctions[this.id] ) {
+					for ( var i = 0; i < sfdata.initFunctions[this.id].length; i++ ) {
+					/*op-patch|BL|2011-05-10|end*/
 						sfdata.initFunctions[this.id][i].initFunction(
 							this.id,
 							sfdata.initFunctions[this.id][i].parameters
Index: extensions/SemanticForms/libs/collapse.js
===================================================================
--- extensions/SemanticForms/libs/collapse.js	(revision 0)
+++ extensions/SemanticForms/libs/collapse.js	(revision 0)
@@ -0,0 +1,92 @@
+/*  Copyright 2008, ontoprise GmbH
+*  This file is part of CollapsingForms patch for SemanticForms.
+*
+*   CollapsingForms is free software; you can redistribute it and/or modify
+*   it under the terms of the GNU General Public License as published by
+*   the Free Software Foundation; either version 3 of the License, or
+*   (at your option) any later version.
+*
+*   CollapsingForms is distributed in the hope that it will be useful,
+*   but WITHOUT ANY WARRANTY; without even the implied warranty of
+*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*   GNU General Public License for more details.
+*
+*   You should have received a copy of the GNU General Public License
+*   along with this program.  If not, see <http://www.gnu.org/licenses/>.
+* 
+*   Contains collapsing functions for semantic forms
+*/
+var CollapsingForm = Class.create();
+CollapsingForm.prototype = {
+	initialize: function() {
+		this.closedContainers = GeneralCookieTools.getCookieObject("CollapsingForm");
+		if (this.closedContainers == null) this.closedContainers = new Object();
+	},
+
+	switchVisibilityWithImg: function(id) {
+		var openedimg = '',
+		    closedimg = '';
+		if ($(id).visible()) {
+			this.closedContainers[id] = false;
+			closedimg = "<img id=\"" + id + "_img\" onmouseout=\"(src='"+ wgScriptPath + "/extensions/SemanticForms/skins" + "/plus.gif')\" onmouseover=\"(src='"+ wgScriptPath + "/extensions/SemanticForms/skins" + "/plus-act.gif')\" src=\""+ wgScriptPath + "/extensions/SemanticForms/skins" + "/plus.gif\"/>";
+			$(id+"_img").replace(closedimg);
+		} else {
+			this.closedContainers[id] = true;
+			openedimg = "<img id=\"" + id + "_img\" onmouseout=\"(src='" + wgScriptPath + "/extensions/SemanticForms/skins" + "/minus.gif')\" onmouseover=\"(src='"+ wgScriptPath + "/extensions/SemanticForms/skins" + "/minus-act.gif')\" src=\""+ wgScriptPath + "/extensions/SemanticForms/skins" + "/minus.gif\"/>";
+			$(id+"_img").replace(openedimg)
+		}
+		GeneralCookieTools.setCookieObject("CollapsingForm", this.closedContainers);
+		this.switchVisibility(id);
+	},
+
+	switchVisibility: function(container) {
+		var visible = $(container).visible();
+		if ( visible ) {    
+			$(container).hide();
+		} else {
+			$(container).show();
+		}
+	}
+}
+
+//-- cookie functions for collapsing forms -- //
+// taken out of the generalTools.js from SMWHalo 
+
+GeneralCookieTools = new Object();
+
+/**
+ * Returns the cookie value for the given key
+ */
+GeneralCookieTools.getCookie = function (name) {
+	var value=null;
+	if(document.cookie != "") {
+		var kk=document.cookie.indexOf(name+"=");
+		if(kk >= 0) {
+			kk=kk+name.length+1;
+			var ll=document.cookie.indexOf(";", kk);
+			if(ll < 0)ll=document.cookie.length;
+			value=document.cookie.substring(kk, ll);
+			value=unescape(value); 
+		}
+	}
+	return value;
+}
+
+GeneralCookieTools.setCookieObject = function(key, object) {
+	var json = Object.toJSON(object);
+	document.cookie = key+"="+json; 
+}
+
+GeneralCookieTools.getCookieObject = function(key) {
+	var json = GeneralCookieTools.getCookie(key);
+	var res;
+	try {
+		res = json.evalJSON(false);
+	}
+	catch (e) {
+		return null;
+	}
+	return res;
+}
+
+var smwCollapsingForm = new CollapsingForm();
\ No newline at end of file
Index: extensions/SemanticForms/specials/SF_FormEdit.php
===================================================================
--- extensions/SemanticForms/specials/SF_FormEdit.php	(revision 10879)
+++ extensions/SemanticForms/specials/SF_FormEdit.php	(working copy)
@@ -120,6 +120,11 @@
 		} elseif ( $target_name == '' && $page_name_formula == '' ) {
 			$text = Xml::element( 'p', array( 'class' => 'error' ), wfMsg( 'sf_formedit_badurl' ) ) . "\n";
 		} else {
+			/*op-patch|BL|2009-09-16|CollapsingForms|SaveFormnameGlobally|start*/
+			/*op-patch|BL|2009-09-16|CollapsingForms|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/CollapsingForms*/
+			global $smwgRMActFormName;
+			$smwgRMActFormName = $form_name;
+			/*op-patch|BL|2009-09-16|end*/
 			$form_article = new Article( $form_title );
 			$form_definition = $form_article->getContent();
 
@@ -261,6 +266,8 @@
 				$text .= $pre_form_html;
 				$text .= $form_text;
 			}
+		global $sfgScriptPath, $wgJsMimeType;
+		$wgOut->addHTML("<script type=\"{$wgJsMimeType}\" src=\"{$sfgScriptPath}/libs/collapse.js\"></script>");
 		}
 		// instead of adding the Javascript using addScript(), which is
 		// the standard approach, we add it using addHTML(), below the
