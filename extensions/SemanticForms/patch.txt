Index: extensions/SemanticForms/specials/SF_FormEdit.php
===================================================================
--- extensions/SemanticForms/specials/SF_FormEdit.php	(revision 9578)
+++ extensions/SemanticForms/specials/SF_FormEdit.php	(working copy)
@@ -126,6 +126,11 @@
 		} elseif ( $target_name == '' && $page_name_formula == '' ) {
 			$text = Xml::element( 'p', array( 'class' => 'error' ), wfMsg( 'sf_formedit_badurl' ) ) . "\n";
 		} else {
+			/*op-patch|BL|2009-09-16|CollapsingForms|SaveFormnameGlobally|start*/
+			/*op-patch|BL|2009-09-16|CollapsingForms|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/CollapsingForms*/
+			global $smwgRMActFormName;
+			$smwgRMActFormName = $form_name;
+			/*op-patch|BL|2009-09-16|end*/
 			$form_article = new Article( $form_title );
 			$form_definition = $form_article->getContent();
 
@@ -253,6 +258,8 @@
 				$text .= $pre_form_html;
 				$text .= $form_text;
 			}
+		global $sfgScriptPath, $wgJsMimeType;
+		$wgOut->addHTML("<script type=\"{$wgJsMimeType}\" src=\"{$sfgScriptPath}/libs/collapse.js\"></script>");
 		}
 		// instead of adding the Javascript using addScript(), which is
 		// the standard approach, we add it using addHTML(), below the
Index: extensions/SemanticForms/includes/SF_Utils.php
===================================================================
--- extensions/SemanticForms/includes/SF_Utils.php	(revision 9578)
+++ extensions/SemanticForms/includes/SF_Utils.php	(working copy)
@@ -245,7 +245,11 @@
 		$scripts[] = "$sfgScriptPath/libs/SF_autogrow.js";
 
 		if ( $wgFCKEditorDir )
-			$scripts[] = "$wgScriptPath/$wgFCKEditorDir/fckeditor.js";
+            /*op-patch|SR|2010-12-06|CKeditor|check for FCK or CK|start*/
+            $scripts[] = class_exists('CKEditor')
+                ? "$wgScriptPath/$wgFCKEditorDir/ckeditor.js"
+                : "$wgScriptPath/$wgFCKEditorDir/fckeditor.js";
+            /*op-patch|SR|2010-12-06|CKeditor|check for FCK or CK|end*/
 		$scripts[] = "$sfgScriptPath/libs/SemanticForms.js";
 
 		global $wgOut;
Index: extensions/SemanticForms/includes/SF_FormLinker.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormLinker.php	(revision 9578)
+++ extensions/SemanticForms/includes/SF_FormLinker.php	(working copy)
@@ -8,6 +8,11 @@
  * @author Yaron Koren
  */
 
+// patches included:
+// 1. "edit with form"-tab for Categories. DH Apr 22 09
+//    tag of patch: op-patch|DH|2009-04-22|"edit with form"-tab for Categories
+//    doc: op-patch|DH|2009-04-22|"edit with form"-tab for Categories|doc|
+
 if ( !defined( 'MEDIAWIKI' ) ) die();
 
 class SFFormLinker {
@@ -312,7 +317,10 @@
 		// If this is not a category page, look for a default form
 		// for its parent category or categories.
 		$namespace = $title->getNamespace();
-		if ( NS_CATEGORY !== $namespace ) {
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|start*/
+		//if (NS_CATEGORY !== $namespace) {
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|end*/
+		
 			$default_forms = array();
 			$categories = SFUtils::getCategoriesForPage( $title );
 			foreach ( $categories as $category ) {
@@ -321,7 +329,10 @@
 			if ( count( $default_forms ) > 0 ) {
 				return $default_forms;
 			}
-		}
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|start*/
+		//}
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|end*/
+			
 		// If we're still here, just return the default form for the
 		// namespace, which may well be null.
 		if ( NS_MAIN === $namespace ) {
Index: extensions/SemanticForms/includes/SF_FormUtils.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormUtils.php	(revision 9578)
+++ extensions/SemanticForms/includes/SF_FormUtils.php	(working copy)
@@ -320,15 +320,21 @@
 		global $wgUser, $wgDefaultUserOptions;
 
 		$showFCKEditor = 0;
-		if ( !$wgUser->getOption( 'riched_start_disabled', $wgDefaultUserOptions['riched_start_disabled'] ) ) {
+		/*op-patch|SR|2009-10-19|FCKeditor|eliminate some warnings|start*/
+		/*op-patch|SR|2009-10-19|FCKeditor|eliminate some warnings|doc http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Eliminate_warnings_of_empty_settings_variables */
+		$defaultOption = in_array('riched_start_disabled', array_keys($wgDefaultUserOptions)) ? $wgDefaultUserOptions['riched_start_disabled'] : null;
+		if ( !$wgUser->getOption( 'riched_start_disabled', $defaultOption ) ) {
 			$showFCKEditor += RTE_VISIBLE;
 		}
-		if ( $wgUser->getOption( 'riched_use_popup', $wgDefaultUserOptions['riched_use_popup'] ) ) {
+		$defaultOption = in_array('riched_use_popup', array_keys($wgDefaultUserOptions)) ? $wgDefaultUserOptions['riched_use_popup'] : null;
+		if ( $wgUser->getOption( 'riched_use_popup', $defaultOption ) ) {
 			$showFCKEditor += RTE_POPUP;
 		}
-		if ( $wgUser->getOption( 'riched_use_toggle', $wgDefaultUserOptions['riched_use_toggle'] ) ) {
+		$defaultOption = in_array('riched_use_toggle', array_keys($wgDefaultUserOptions)) ? $wgDefaultUserOptions['riched_use_toggle'] : null;
+		if ( $wgUser->getOption( 'riched_use_toggle', $defaultOption ) ) {
 			$showFCKEditor += RTE_TOGGLE_LINK;
 		}
+		/*op-patch|SR|2009-10-19|FCKeditor|eliminate some warnings|end*/
 
 		if ( ( !empty( $_SESSION['showMyFCKeditor'] ) ) && ( $wgUser->getOption( 'riched_toggle_remember_state' ) ) )
 		{
@@ -342,19 +348,32 @@
 
 	static function prepareTextForFCK( $text ) {
 		global $wgTitle;
-
-		$options = new FCKeditorParserOptions();
+        /*op-patch|SR|2010-12-06|CKeditor|check for FCK or CK|start*/
+        if (class_exists('FCKeditor')) {
+            $classParser = 'FCKeditorParser';
+            $classParserOptions = 'FCKeditorParserOptions';
+        }
+        else if (class_exists('CKEditor')) {
+            $classParser = 'CKeditorParser';
+            $classParserOptions = 'CKeditorParserOptions';
+        }
+		$options = new $classParserOptions();
 		$options->setTidy( true );
-		$parser = new FCKeditorParser();
+		$parser = new $classParser();
+        /*op-patch|SR|2010-12-06|CKeditor|check for FCK or CK|end*/
 		$parser->setOutputType( OT_HTML );
 		$text = $parser->parse( $text, $wgTitle, $options )->getText();
 		return $text;
 	}
 
-	static function mainFCKJavascript( $showFCKEditor ) {
+	static function mainFCKJavascript( $showFCKEditor, $rowsHeight= 5 ) {
 		global $wgUser, $wgScriptPath, $wgFCKEditorExtDir, $wgFCKEditorDir, $wgFCKEditorToolbarSet, $wgFCKEditorHeight;
 		global $wgHooks, $wgExtensionFunctions;
 
+		/*op-patch|SR|2009-06-04|FCKeditor|use rows parameter for editor window height|start*/
+		/*op-patch|SR|2009-06-04|FCKeditor|use rows parameter for editor window height|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Use_rows_parameter_for_FCK_editor_window_height_in_SF*/
+		$FCKEditorHeight = ($wgFCKEditorHeight < 300) ? 300 : $wgFCKEditorHeight;
+		/*op-patch|SR|2009-06-04|FCKeditor|use rows parameter for editor window height|end*/
 		$newWinMsg = wfMsg( 'rich_editor_new_window' );
 		$javascript_text = '
 var showFCKEditor = ' . $showFCKEditor . ';
@@ -386,7 +405,10 @@
 		if ( substr( $wgFCKEditorDir, -1 ) != '/' ) {
 			$wgFCKEditorDir .= '/';
 		}
-		
+		/*op-patch|SR|2010-12-06|CKeditor|check for FCK or CK|start*/
+        $RichEditor = class_exists('CKEditor') ? 'cke' : 'fck';
+        if ($RichEditor == 'fck') {
+        /*op-patch|SR|2010-12-06|CKeditor|check for FCK or CK|end*/
 		$javascript_text .= <<<END
 var oFCKeditor = new FCKeditor( "free_text" );
 
@@ -399,6 +421,17 @@
 oFCKeditor.ToolbarSet = "$wgFCKEditorToolbarSet"; 
 oFCKeditor.ready = true;
 
+END;
+        } else {
+   		$javascript_text .= <<<END
+var wgCKeditorInstance = null; //CKEDITOR.replace( 'free_text' );
+var wgCKeditorCurrentMode = "wysiwyg";
+CKEDITOR.ready=true;
+
+END;
+
+        }
+        $javascript_text .= <<<END
 //IE hack to call func from popup
 function FCK_sajax(func_name, args, target) {
 	sajax_request_type = 'POST' ;
@@ -408,7 +441,36 @@
 		}
 	);
 }
+/*op-patch|SR|2009-06-04|FCKeditor|use rows parameter for editor window height|start*/
+// if the rows attribute was defined in the form, use fontsize to calculate the editor window height
+function getfontsize(el) {
+	var x = document.getElementById(el);
+ 	if (x.currentStyle) {
+		// IE
+		var y = x.currentStyle['lineheight'];
+ 	} else if (window.getComputedStyle) {
+		// FF, Opera
+  		var y = document.defaultView.getComputedStyle(x,null).getPropertyValue('line-height');
+ 	}
+ 	return y;
+}
+function getWindowHeight4editor() {
+	var fsize = getfontsize('free_text');
+	// if value was not determined, return default val from $wgFCKEditorHeight
+	if (!fsize) return $FCKEditorHeight;
+	if (fsize.indexOf('px') == -1)  // we didn't get pixels
+		// arbitary value, don't hassle with caluclating
+		return $FCKEditorHeight;
+	var px = parseFloat(fsize.replace(/\w{2}$/, ''));
+	// the text in the edit window is slightly larger than the determined value
+	px = px * 1.25;
+	return Math.round (px * $rowsHeight);
+}
+/*op-patch|SR|2009-06-04|FCKeditor|use rows parameter for editor window height|end*/
 
+END;
+        if ($RichEditor == 'fck') {
+        $javascript_text .= <<<END
 function onLoadFCKeditor()
 {
 	if (!(showFCKEditor & RTE_VISIBLE)) 
@@ -418,14 +480,15 @@
 	if ( realTextarea )
 	{
 		// Create the editor instance and replace the textarea.
-		var height = $wgFCKEditorHeight;
-		if (height == 0) {
-			// the original onLoadFCKEditor() has a bunch of
-			// browser-based calculations here, but let's just
-			// keep it simple
-			height = 300;
-		}
+		/*op-patch|SR|2009-06-04|FCKeditor|use rows parameter for editor window height|start*/
+		var height = getWindowHeight4editor();
+		// apply caluclations of height from the FCKEditor function itself
+		// Add the height to the offset of the toolbar.
+		height += 50;
+		// Add a small space to be left in the bottom.
+		height += 20 ;
 		oFCKeditor.Height = height;
+		/*op-patch|SR|2009-06-04|FCKeditor|use rows parameter for editor window height|end*/
 		oFCKeditor.ReplaceTextarea() ;
 		
 		FCKeditorInsertTags = function (tagOpen, tagClose, sampleText, oDoc)
@@ -606,11 +669,15 @@
 addOnloadHook( initEditor );
 
 END;
+        } else { // ckeditor
+            $javascript_text .= CKeditor_MediaWiki::InitializeScripts('free_text', $newWinMsg);
+        }
 		return $javascript_text;
 	}
 
 	static function FCKToggleJavascript() {
 		// add toggle link and handler
+        if ( class_exists('FCKeditor') ) {
 		$javascript_text = <<<END
 
 function ToggleFCKEditor(mode, objId)
@@ -716,6 +783,9 @@
 }
 
 END;
+        } else { // ckeditor
+            $javascript_text = CKeditor_MediaWiki::ToggleScript();
+        }
 		return $javascript_text;
 	}
 
Index: extensions/SemanticForms/includes/SF_FormPrinter.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormPrinter.php	(original)
+++ extensions/SemanticForms/includes/SF_FormPrinter.php    (patched version)
@@ -175,6 +175,17 @@
     $new_text = "";
     // flag for placing "<onlyinclude>" tags in form output
     $onlyinclude_free_text = false;
+
+    /*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|start*/
+    /*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Patch_free_text_in_includeonly_tags*/
+    $includeonly_free_text = false;
+    /*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|end*/
+
+    /*op-patch|DH|2009-09-18|SF|include namespace for current user|start*/
+    global $wgContLang;
+    $namespace_labels = $wgContLang->getNamespaces();
+    $user_namespace = $namespace_labels[NS_USER];
+    /*op-patch|DH|2009-09-18|SF|include namespace for current user|end*/

     // if we have existing content and we're not in an active replacement
     // situation, preserve the original content. We do this because we want
@@ -319,6 +330,10 @@
       $tif = new SFTemplateInForm();
       $start_position = 0;
       $template_text = "";
+      /*op-patch|BL|2009-10-09|CollapsingForms|AddCollapsibleTag|start*/
+      /*op-patch|BL|2009-10-09|CollapsingForms|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/CollapsingForms*/
+      $collapsible = false;
+      /*op-patch|BL|2009-10-09|CollapsingForms|AddCollapsibleTag|end*/
       // the append is there to ensure that the original array doesn't get
       // modified; is it necessary?
       $section = " " . $form_def_sections[$section_num];
@@ -340,11 +355,17 @@
           // Also replace periods with underlines, since that's what
           // POST does to strings anyway.
           $query_template_name = str_replace( '.', '_', $query_template_name );
+          /*op-patch|BL|2009-08-28|CollapsingForms|AddForceOpen|start*/
+          $force_open = false;
+          /*op-patch|BL|2009-10-09|CollapsingForms|AddForceOpen|end*/
           // Cycle through the other components.
           for ( $i = 2; $i < count( $tag_components ); $i++ ) {
             $component = $tag_components[$i];
             if ( $component == 'multiple' ) $allow_multiple = true;
             if ( $component == 'strict' ) $strict_parsing = true;
+            /*op-patch|BL|2009-08-28|CollapsingForms|AddCollapsibleTag|start*/
+            if ( $component == 'collapsible' ) $collapsible = true;
+            /*op-patch|BL|2009-08-28|CollapsingForms|AddCollapsibleTag|end*/
             $sub_components = explode( '=', $component, 2 );
             if ( count( $sub_components ) == 2 ) {
               if ( $sub_components[0] == 'label' ) {
@@ -352,14 +373,58 @@
               } elseif ( $sub_components[0] == 'add button text' ) {
                 $add_button_text = $sub_components[1];
               }
+              /*op-patch|BL|2009-09-16|CollapsingForms|AddForceopenTag|start*/
+              elseif ( $sub_components[0] == 'forceopen' ) {
+                if ($sub_components[1] && strtolower($sub_components[1] == 'true'))
+                  $force_open = true;
+              }
+              /*op-patch|BL|2009-09-16|CollapsingForms|AddForceopenTag|end*/
             }
           }
           // If this is the first instance, add the label into the form, if
           // there is one.
           if ( ( $old_template_name != $template_name ) && isset( $template_label ) ) {
             $form_text .= "<fieldset>\n";
-            $form_text .= "<legend>$template_label</legend>\n";
+            /*op-patch|BL|2009-08-28|CollapsingForms|AddCollapseFunctionality|start*/
+            // Add Javascript, curser style and sfgTabIndex for each legend
+            // content was:
+            // $form_text .= "<legend>$template_label</legend>\n";
+            // }
+            global $smwgRMActFormName, $sfgScriptPath;
+            //only if collapsible
+            if ($collapsible) {
+              #cookie processing
+              $cookie_json = in_array('CollapsingForm', array_keys($_COOKIE)) ? $_COOKIE['CollapsingForm'] : null;
+              if ($cookie_json)
+                $cookie_obj = json_decode($cookie_json,true);
+              if (isset($cookie_obj) && array_key_exists($smwgRMActFormName.'_sec_'.$section_num, $cookie_obj)) {
+                $cookie_open = $cookie_obj[$smwgRMActFormName.'_sec_'.$section_num];
+              }
+              else {
+              	$cookie_open = false;
+              }
+              if ($force_open || $cookie_open) {
+                $section_visibility ='';
+                $img = 'minus';
+              }
+              else {
+                $section_visibility = 'none';
+                $img = 'plus';
+              }
+              $form_text .= "<legend tabindex=\"$sfgTabIndex\" style=\"cursor: pointer;font-weight:bold;\"
+                onKeyDown=\"javascript:if (event.keyCode == 32){ smwCollapsingForm.switchVisibilityWithImg('{$smwgRMActFormName}_sec_{$section_num}');}\"
+                onClick=\"smwCollapsingForm.switchVisibilityWithImg('{$smwgRMActFormName}_sec_{$section_num}');\">
+                <img id=\"{$smwgRMActFormName}_sec_{$section_num}_img\" onmouseout=\"(src='$sfgScriptPath/skins/$img.gif')\"
+                onmouseover=\"(src='$sfgScriptPath/skins/$img-act.gif')\" src=\"$sfgScriptPath/skins/$img.gif\"/>&nbsp;$template_label</legend>\n";
+              $sfgTabIndex++;
+              #This DIV provides the functionality for collapsing forms
+              $form_text .= "<div id=\"{$smwgRMActFormName}_sec_".$section_num."\" style=\"display:".$section_visibility."\">";
+            }
+            else {
+             $form_text .= "<legend>$template_label</legend>\n";
+            } // end collabsible
           }
+          /*op-patch|BL|2009-08-28|CollapsingForms|AddCollapseFunctionality|end*/
           $template_text .= "{{" . $tif->template_name;
           $all_fields = $tif->getAllFields();
           // remove template tag
@@ -715,7 +780,19 @@
               if ( $cur_value == '' ) {
                 $default_value = '!free_text!';
               } else {
-                $default_value = $cur_value;
+                /*op-patch|SR|2011-03-21|FCKeditor|bugfix for default parameter in freetext|start*/
+                /*op-patch|SR|2011-03-21|FCKeditor|bugfix for default parameter in freetext|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/FCKParse_for_default_value*/
+                // if the FCKeditor extension is installed, default value needs to be parsed for use in editor
+                global $wgFCKEditorDir;
+                if ( $wgFCKEditorDir && strpos( $existing_page_content, '__NORICHEDITOR__' ) === false ) {
+                    $showFCKEditor = SFFormUtils::getShowFCKEditor();
+                    if ( !$form_submitted && ( $showFCKEditor & RTE_VISIBLE ) ) {
+                        $default_value = SFFormUtils::prepareTextForFCK( $cur_value );
+                    }
+                    else $default_value = $cur_value;
+                }
+                else $default_value = $cur_value;
+                /*op-patch|SR|2011-03-21|FCKeditor|bugfix for default parameter in freetext|end*/
               }
               $new_text = SFTextAreaInput::getText( $default_value, 'free_text', false, ( $form_is_disabled || $is_restricted ), $field_args );
               if ( in_array( 'edittools', $free_text_components ) ) {
@@ -952,10 +1029,13 @@
                 // if the date is hidden, cur_value will already be set
                 // to the default value
                 ( $cur_value == '' || $cur_value == 'current user' ) ) {
-              if ( $input_type == 'text' || $input_type == '' ) {
-                $cur_value_in_template = $wgUser->getName();
+              /*op-patch|DH|2009-09-18|SF|include namespace for current user|start*/
+              if ($input_type == 'text' || $input_type == '' ||
+                  $input_type == 'haloACtext' || $input_type == 'haloACtextarea') {
+                $cur_value_in_template = $user_namespace.":".$wgUser->getName();
                 $cur_value = $cur_value_in_template;
               }
+              /*op-patch|DH|2009-09-18|SF|include namespace for current user|end*/
             }
             $new_text = $this->formFieldHTML( $form_field, $cur_value );

@@ -1072,9 +1152,16 @@
               $form_is_partial = true;
               // replacement pages may have minimal matches...
               $source_page_matches_this_form = true;
-            } elseif ( $tag == 'includeonly free text' || $tag == 'onlyinclude free text' ) {
+            }
+            /*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|start*/
+            /*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Patch_free_text_in_includeonly_tags*/
+            elseif($tag == 'includeonly free text') {
+              $includeonly_free_text = true;
+            }
+            elseif($tag == 'onlyinclude free text') {
               $onlyinclude_free_text = true;
             }
+            /*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|end*/
           }
           $section = substr_replace( $section, '', $brackets_loc, $brackets_end_loc + 3 - $brackets_loc );
         // =====================================================
@@ -1156,6 +1243,10 @@
       } else {
         $form_text .= $section;
       }
+      /*op-patch|BL|2009-08-14|CollapsingForms|AddDivForCollapsingForms|start*/
+      if($collapsible)
+        $form_text .= "</div>"; //closing div for collapsing
+      /*op-patch|BL|2009-08-14|end*/

     } // end for

@@ -1197,6 +1288,17 @@
     } else {
       $free_text = null;
     }
+    /*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|start*/
+    if ( $includeonly_free_text ) {
+      $free_text = str_replace("<noinclude>",'', $free_text);
+      $free_text = str_replace("</noinclude>",'', $free_text);
+      $free_text = str_replace("<includeonly>",'', $free_text);
+      $free_text = str_replace("</includeonly>",'', $free_text);
+      $free_text = trim ($free_text);
+      $data_text = str_replace('!free_text!','</noinclude><includeonly>!free_text!</includeonly><noinclude>', $data_text);
+      $data_text = "<noinclude>".$data_text."</noinclude>";
+    }
+    /*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|end*/
     if ( $onlyinclude_free_text ) {
       // modify free text and data text to insert <onlyinclude> tags
       $free_text = str_replace( "<onlyinclude>", '', $free_text );
Index: extensions/SemanticForms/includes/SF_FormEditTab.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormEditTab.php	(revision 9578)
+++ extensions/SemanticForms/includes/SF_FormEditTab.php	(working copy)
@@ -137,9 +137,20 @@
 		}
 		if ( count( $form_names ) > 1 ) {
 			SFUtils::loadMessages();
-			$warning_text = '    <div class="warningMessage">' . wfMsg( 'sf_formedit_morethanoneform' ) . "</div>\n";
+			/*op-patch|SR|2010-01-15|selection when several default forms exist|start*/
+			/*op-patch|SR|2010-01-15|selection when several default forms exist|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Choose_form_for_several_default_forms*/
+			global $wgContLang;
+			$jsCode = "javascript:top.location.href=wgScript+'/"
+				.$wgContLang->getNsText(NS_SPECIAL)
+				.":FormEdit/'+this[selectedIndex].text+'/'+wgPageName; return false";
+			$selection = '<b>'.wfMsg('sf_several_forms_notice').'</b><br/>'
+				.wfMsg('sf_several_forms_label').'<select onchange="'.$jsCode.'">'."\n";
+			for ($i =0, $is=count($form_names); $i < $is; $i++)
+				$selection .= "<option>".$form_names[$i]."</option>\n";
+			$selection.="</select>\n";
 			global $wgOut;
-			$wgOut->addHTML( $warning_text );
+			$wgOut->addHTML( $selection );
+			/*op-patch|SR|2010-01-15|selection when several default forms exist|end*/
 		}
 		$form_name = $form_names[0];
 
Index: extensions/SemanticForms/languages/SF_Messages.php
===================================================================
--- extensions/SemanticForms/languages/SF_Messages.php	(revision 9578)
+++ extensions/SemanticForms/languages/SF_Messages.php	(working copy)
@@ -16,6 +16,10 @@
  */
 $messages['en'] = array(
 	// user messages
+       /*op-patch|SR|2010-01-15|selection when several default forms exist|start*/
+       'sf_several_forms_notice'             => 'There is more than one form defined for this page. You can select another form to edit the page.',
+       'sf_several_forms_label'              => 'Select form: ',
+       /*op-patch|SR|2010-01-15|selection when several default forms exist|end*/
 	'semanticforms-desc'                 => 'Forms for adding and editing semantic data',
 	'specialpages-group-sf_group'        => 'Semantic Forms',
 	'createproperty'                     => 'Create a property',
Index: extensions/SemanticForms/libs/SemanticForms.js
===================================================================
--- extensions/SemanticForms/libs/SemanticForms.js	(original)
+++ extensions/SemanticForms/libs/SemanticForms.js	(patched version)
@@ -29,7 +29,11 @@
 		}
 	}
 
-    jQuery.noConflict();
+    /*op-patch|SR|2011-03-18|SF|Fix JS errors in STB|start*/
+    /*op-patch|SR|2011-03-18|SF|Fix JS errors in STB|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Fix_js_bug_with_STB*/
+    if ( typeof stb_control == 'undefined')
+        jQuery.noConflict();
+    /*op-patch|SR|2011-03-18|SF|Fix JS errors in STB|end*/
 
     /* extending jQuery functions for custom highlighting */
     jQuery.ui.autocomplete.prototype._renderItem = function( ul, item) {

Index: extensions/SemanticForms/includes/SF_FormInputs.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormInputs.php (original)
+++ extensions/SemanticForms/includes/SF_FormInputs.php	(patched version)
@@ -125,6 +125,16 @@
     if ( array_key_exists( 'maxlength', $other_args ) ) {
       $inputAttrs['maxlength'] = $other_args['maxlength'];
     }
+    /*op-patch|SR|2011-03-31|SF|Fix other_args bug|start*/
+    /*op-patch|SR|2011-03-31|SF|Fix other_args bug|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Fix_other_args_bug*/
+    // fix bug http://smwforum.ontoprise.com/smwbugs/show_bug.cgi?id=13984
+    $known_other_args = array('class', 'field_type', 'size', 'maxlength', 'is_uploadable', 'possible_values',
+        'is_list', 'delimiter', 'autocomplete field type', 'value_labels', 'semantic_property' );
+    foreach (array_keys($other_args) as $key ) {
+        if ($key && !in_array($key, $known_other_args))
+            $inputAttrs[$key] = $other_args[$key];
+    }
+    /*op-patch|SR|2011-03-31|SF|Fix other_args bug|end*/
     $text = Xml::element( 'input', $inputAttrs );
 
     if ( array_key_exists( 'is_uploadable', $other_args ) && $other_args['is_uploadable'] == true ) {
@@ -628,6 +638,16 @@
       $textarea_attrs['onKeyDown'] = $maxLengthJSCheck;
       $textarea_attrs['onKeyUp'] = $maxLengthJSCheck;
     }
+    /*op-patch|SR|2011-03-31|SF|Fix other_args bug|start*/
+    /*op-patch|SR|2011-03-31|SF|Fix other_args bug|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Fix_other_args_bug*/
+    // fix bug http://smwforum.ontoprise.com/smwbugs/show_bug.cgi?id=13984
+    $known_other_args = array('class', 'field_type', 'size', 'maxlength', 'is_uploadable', 'possible_values',
+        'is_list', 'delimiter', 'autocomplete field type', 'value_labels', 'semantic_property', 'rows', 'cols', 'autogrow' );
+    foreach (array_keys($other_args) as $key ) {
+        if ( $key && ! in_array($key, $known_other_args))
+            $textarea_attrs[$key] = $other_args[$key];
+    }
+    /*op-patch|SR|2011-03-31|SF|Fix other_args bug|end*/
     $text = Xml::element( 'textarea', $textarea_attrs, $cur_value, false );
     $spanClass = "inputSpan";
     if ( $is_mandatory ) { $spanClass .= " mandatoryFieldSpan"; }
